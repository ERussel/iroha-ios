// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: primitive.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class CallResult;
@class EngineLog;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum RolePermission

/**
 * *
 * Represents any possible value for permission field,
 * then the account is capable of performing such action.
 *
 * Command and Query related permissions are included in the role,
 * which an Account can have.
 *
 * Grantable permission is set as a relation between two accounts:
 * Account A is granting Permission to Account B,
 * so that Account B can perform actions over Account A.
 **/
typedef GPB_ENUM(RolePermission) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  RolePermission_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** Command Permissions */
  RolePermission_CanAppendRole = 0,
  RolePermission_CanCreateRole = 1,
  RolePermission_CanDetachRole = 2,
  RolePermission_CanAddAssetQty = 3,
  RolePermission_CanSubtractAssetQty = 4,
  RolePermission_CanAddPeer = 5,
  RolePermission_CanRemovePeer = 46,
  RolePermission_CanAddSignatory = 6,
  RolePermission_CanRemoveSignatory = 7,
  RolePermission_CanSetQuorum = 8,
  RolePermission_CanCreateAccount = 9,
  RolePermission_CanSetDetail = 10,
  RolePermission_CanCreateAsset = 11,
  RolePermission_CanTransfer = 12,
  RolePermission_CanReceive = 13,
  RolePermission_CanCreateDomain = 14,
  RolePermission_CanAddDomainAssetQty = 43,
  RolePermission_CanSubtractDomainAssetQty = 44,
  RolePermission_CanCallEngine = 48,

  /** Query permissions */
  RolePermission_CanReadAssets = 15,
  RolePermission_CanGetRoles = 16,
  RolePermission_CanGetMyAccount = 17,
  RolePermission_CanGetAllAccounts = 18,
  RolePermission_CanGetDomainAccounts = 19,
  RolePermission_CanGetMySignatories = 20,
  RolePermission_CanGetAllSignatories = 21,
  RolePermission_CanGetDomainSignatories = 22,
  RolePermission_CanGetMyAccAst = 23,
  RolePermission_CanGetAllAccAst = 24,
  RolePermission_CanGetDomainAccAst = 25,
  RolePermission_CanGetMyAccDetail = 26,
  RolePermission_CanGetAllAccDetail = 27,
  RolePermission_CanGetDomainAccDetail = 28,
  RolePermission_CanGetMyAccTxs = 29,
  RolePermission_CanGetAllAccTxs = 30,
  RolePermission_CanGetDomainAccTxs = 31,
  RolePermission_CanGetMyAccAstTxs = 32,
  RolePermission_CanGetAllAccAstTxs = 33,
  RolePermission_CanGetDomainAccAstTxs = 34,
  RolePermission_CanGetMyTxs = 35,
  RolePermission_CanGetAllTxs = 36,
  RolePermission_CanGetBlocks = 42,
  RolePermission_CanGetPeers = 45,
  RolePermission_CanGetMyEngineReceipts = 50,
  RolePermission_CanGetDomainEngineReceipts = 51,
  RolePermission_CanGetAllEngineReceipts = 52,

  /** Grant permissions */
  RolePermission_CanGrantCanSetMyQuorum = 37,
  RolePermission_CanGrantCanAddMySignatory = 38,
  RolePermission_CanGrantCanRemoveMySignatory = 39,
  RolePermission_CanGrantCanTransferMyAssets = 40,
  RolePermission_CanGrantCanSetMyAccountDetail = 41,
  RolePermission_CanGrantCanCallEngineOnMyBehalf = 49,

  /** Root Permission */
  RolePermission_Root = 47,
};

GPBEnumDescriptor *RolePermission_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL RolePermission_IsValidValue(int32_t value);

#pragma mark - Enum GrantablePermission

typedef GPB_ENUM(GrantablePermission) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  GrantablePermission_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  GrantablePermission_CanAddMySignatory = 0,
  GrantablePermission_CanRemoveMySignatory = 1,
  GrantablePermission_CanSetMyQuorum = 2,
  GrantablePermission_CanSetMyAccountDetail = 3,

  /** not implemented now */
  GrantablePermission_CanTransferMyAssets = 4,
  GrantablePermission_CanCallEngineOnMyBehalf = 5,
};

GPBEnumDescriptor *GrantablePermission_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL GrantablePermission_IsValidValue(int32_t value);

#pragma mark - PrimitiveRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface PrimitiveRoot : GPBRootObject
@end

#pragma mark - Signature

typedef GPB_ENUM(Signature_FieldNumber) {
  Signature_FieldNumber_PublicKey = 1,
  Signature_FieldNumber_Signature = 2,
};

GPB_FINAL @interface Signature : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *publicKey;

@property(nonatomic, readwrite, copy, null_resettable) NSString *signature;

@end

#pragma mark - Peer

typedef GPB_ENUM(Peer_FieldNumber) {
  Peer_FieldNumber_Address = 1,
  Peer_FieldNumber_PeerKey = 2,
  Peer_FieldNumber_TlsCertificate = 3,
};

typedef GPB_ENUM(Peer_Certificate_OneOfCase) {
  Peer_Certificate_OneOfCase_GPBUnsetOneOfCase = 0,
  Peer_Certificate_OneOfCase_TlsCertificate = 3,
};

GPB_FINAL @interface Peer : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

/** hex string */
@property(nonatomic, readwrite, copy, null_resettable) NSString *peerKey;

@property(nonatomic, readonly) Peer_Certificate_OneOfCase certificateOneOfCase;

/** pem-encoded string */
@property(nonatomic, readwrite, copy, null_resettable) NSString *tlsCertificate;

@end

/**
 * Clears whatever value was set for the oneof 'certificate'.
 **/
void Peer_ClearCertificateOneOfCase(Peer *message);

#pragma mark - AccountDetailRecordId

typedef GPB_ENUM(AccountDetailRecordId_FieldNumber) {
  AccountDetailRecordId_FieldNumber_Writer = 1,
  AccountDetailRecordId_FieldNumber_Key = 2,
};

GPB_FINAL @interface AccountDetailRecordId : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *writer;

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@end

#pragma mark - EngineLog

typedef GPB_ENUM(EngineLog_FieldNumber) {
  EngineLog_FieldNumber_Address = 1,
  EngineLog_FieldNumber_Data_p = 2,
  EngineLog_FieldNumber_TopicsArray = 3,
};

GPB_FINAL @interface EngineLog : GPBMessage

/** hex string */
@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

/** hex string */
@property(nonatomic, readwrite, copy, null_resettable) NSString *data_p;

/** hex string */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *topicsArray;
/** The number of items in @c topicsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger topicsArray_Count;

@end

#pragma mark - CallResult

typedef GPB_ENUM(CallResult_FieldNumber) {
  CallResult_FieldNumber_Callee = 1,
  CallResult_FieldNumber_ResultData = 2,
};

GPB_FINAL @interface CallResult : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *callee;

@property(nonatomic, readwrite, copy, null_resettable) NSString *resultData;

@end

#pragma mark - EngineReceipt

typedef GPB_ENUM(EngineReceipt_FieldNumber) {
  EngineReceipt_FieldNumber_CommandIndex = 1,
  EngineReceipt_FieldNumber_Caller = 2,
  EngineReceipt_FieldNumber_CallResult = 3,
  EngineReceipt_FieldNumber_ContractAddress = 4,
  EngineReceipt_FieldNumber_LogsArray = 5,
};

typedef GPB_ENUM(EngineReceipt_ResultOrContractAddress_OneOfCase) {
  EngineReceipt_ResultOrContractAddress_OneOfCase_GPBUnsetOneOfCase = 0,
  EngineReceipt_ResultOrContractAddress_OneOfCase_CallResult = 3,
  EngineReceipt_ResultOrContractAddress_OneOfCase_ContractAddress = 4,
};

GPB_FINAL @interface EngineReceipt : GPBMessage

@property(nonatomic, readwrite) int32_t commandIndex;

@property(nonatomic, readwrite, copy, null_resettable) NSString *caller;

@property(nonatomic, readonly) EngineReceipt_ResultOrContractAddress_OneOfCase resultOrContractAddressOneOfCase;

@property(nonatomic, readwrite, strong, null_resettable) CallResult *callResult;

@property(nonatomic, readwrite, copy, null_resettable) NSString *contractAddress;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<EngineLog*> *logsArray;
/** The number of items in @c logsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger logsArray_Count;

@end

/**
 * Clears whatever value was set for the oneof 'resultOrContractAddress'.
 **/
void EngineReceipt_ClearResultOrContractAddressOneOfCase(EngineReceipt *message);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
